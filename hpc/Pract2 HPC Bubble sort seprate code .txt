// BubbleSort.cpp
#include <iostream>
#include <vector>
#include <omp.h>
using namespace std;

void bubbleSortSeq(vector<int>& arr) {
    int n = arr.size();
    for (int i = 0; i < n-1; i++) {
        for (int j = 0; j < n-i-1; j++) {
            if (arr[j] > arr[j+1]) {
                swap(arr[j], arr[j+1]);
            }
        }
    }
}

void bubbleSortPara(vector<int>& arr) {
    int n = arr.size();
    for (int i = 0; i < n-1; i++) {
        #pragma omp parallel for
        for (int j = i%2; j < n-1; j += 2) {
            if (arr[j] > arr[j+1]) {
                swap(arr[j], arr[j+1]);
            }
        }
    }
}

int main() {
    vector<int> data = {6,1,67,3,12,0,34};
    vector<int> arr1 = data;
    vector<int> arr2 = data;

    bubbleSortSeq(arr1);
    bubbleSortPara(arr2);

    cout << "Sequential Bubble Sort: ";
    for (int x : arr1) cout << x << " ";

    cout << "\nParallel Bubble Sort: ";
    for (int x : arr2) cout << x << " ";

    return 0;
}